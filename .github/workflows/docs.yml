name: Deploy Documentation

on:
  push:
    branches:
      - main
      - 'feat/**'
  pull_request:
    branches:
      - main
      - 'feat/**'

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment per branch
concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build documentation
        run: pnpm docs

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-${{ github.sha }}
          path: ./docs
          retention-days: 30

  # Deploy to GitHub Pages (only on push, not PRs)
  deploy-pages:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/feat/'))
    needs: build-docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: docs-${{ github.sha }}
          path: ./docs

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Comment on PR with preview link (if using a preview service)
  comment-preview:
    if: github.event_name == 'pull_request'
    needs: build-docs
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: docs-${{ github.sha }}
          path: ./docs

      # Option 1: Deploy to Netlify for PR previews
      # Uncomment if you want to use Netlify for PR previews
      # - name: Deploy to Netlify
      #   uses: nwtgck/actions-netlify@v2.0
      #   with:
      #     publish-dir: './docs'
      #     production-deploy: false
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     deploy-message: "PR Preview from GitHub Actions"
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      # Option 2: Comment with artifact link
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const artifactUrl = `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            const targetBranch = context.payload.pull_request.base.ref;
            const deploymentNote = targetBranch === 'main' 
              ? 'The documentation will be available at GitHub Pages once this PR is merged to main.'
              : `The documentation will be deployed to the ${targetBranch} branch docs once this PR is merged.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ“š Documentation has been generated for this PR!\n\n[View build artifacts](${artifactUrl})\n\n${deploymentNote}`
            })